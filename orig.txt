const graphQL = require("graphql");
const {
  GraphQLSchema,
  GraphQLObjectType,
  GraphQLString,
  GraphQLID,
  GraphQLInt
} = graphQL;
const _ = require("lodash");
const testData = require("./testData");
const typeDefs = require('./typedefs');

// const bookType = new GraphQLObjectType({
//   name: "book",
//   fields: () => ({
//     id: {
//       type: GraphQLID
//     },
//     name: {
//       type: GraphQLString
//     },
//     genre: {
//       type: GraphQLString
//     }
//   })
// });

// const authorType = new GraphQLObjectType({
//   name: "author",
//   fields: () => ({
//     id: {
//       type: GraphQLID
//     },
//     name: {
//       type: GraphQLString
//     },
//     age: {
//       type: GraphQLInt
//     }
//   })
// });

const rootQuery = new GraphQLObjectType({
  name: "rootQueryType",
  fields: {
    book: {
      type: typeDefs.bookType,
      args: {
        id: {
          type: GraphQLID
        }
      },
      resolve(parent, args) {
        return _.find(testData.bookData, { id: args.id });
      }
    }
  }
});

module.exports = new GraphQLSchema({ query: rootQuery });
